/**
 * Minified by jsDelivr using Terser v5.37.0.
 * Original file: /npm/alpinejs@3.14.9/src/directives.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{onAttributeRemoved,onElRemoved}from"./mutation";import{evaluate,evaluateLater}from"./evaluator";import{elementBoundEffect}from"./reactivity";import Alpine from"./alpine";let prefixAsString="x-";export function prefix(e=""){return prefixAsString+e}export function setPrefix(e){prefixAsString=e}let directiveHandlers={};export function directive(e,t){return directiveHandlers[e]=t,{before(t){if(!directiveHandlers[t])return void console.warn(String.raw`Cannot find directive \`${t}\`. \`${e}\` will use the default order of execution`);const r=directiveOrder.indexOf(t);directiveOrder.splice(r>=0?r:directiveOrder.indexOf("DEFAULT"),0,e)}}}export function directiveExists(e){return Object.keys(directiveHandlers).includes(e)}export function directives(e,t,r){if(t=Array.from(t),e._x_virtualDirectives){let r=Object.entries(e._x_virtualDirectives).map((([e,t])=>({name:e,value:t}))),i=attributesOnly(r);r=r.map((e=>i.find((t=>t.name===e.name))?{name:`x-bind:${e.name}`,value:`"${e.value}"`}:e)),t=t.concat(r)}let i={};return t.map(toTransformedAttributes(((e,t)=>i[e]=t))).filter(outNonAlpineAttributes).map(toParsedDirectives(i,r)).sort(byPriority).map((t=>getDirectiveHandler(e,t)))}export function attributesOnly(e){return Array.from(e).map(toTransformedAttributes()).filter((e=>!outNonAlpineAttributes(e)))}let isDeferringHandlers=!1,directiveHandlerStacks=new Map,currentHandlerStackKey=Symbol();export function deferHandlingDirectives(e){isDeferringHandlers=!0;let t=Symbol();currentHandlerStackKey=t,directiveHandlerStacks.set(t,[]);let r=()=>{for(;directiveHandlerStacks.get(t).length;)directiveHandlerStacks.get(t).shift()();directiveHandlerStacks.delete(t)};e(r),isDeferringHandlers=!1,r()}export function getElementBoundUtilities(e){let t=[],[r,i]=elementBoundEffect(e);t.push(i);return[{Alpine:Alpine,effect:r,cleanup:e=>t.push(e),evaluateLater:evaluateLater.bind(evaluateLater,e),evaluate:evaluate.bind(evaluate,e)},()=>t.forEach((e=>e()))]}export function getDirectiveHandler(e,t){let r=directiveHandlers[t.type]||(()=>{}),[i,n]=getElementBoundUtilities(e);onAttributeRemoved(e,t.original,n);let a=()=>{e._x_ignore||e._x_ignoreSelf||(r.inline&&r.inline(e,t,i),r=r.bind(r,e,t,i),isDeferringHandlers?directiveHandlerStacks.get(currentHandlerStackKey).push(r):r())};return a.runCleanups=n,a}export let startingWith=(e,t)=>({name:r,value:i})=>(r.startsWith(e)&&(r=r.replace(e,t)),{name:r,value:i});export let into=e=>e;function toTransformedAttributes(e=()=>{}){return({name:t,value:r})=>{let{name:i,value:n}=attributeTransformers.reduce(((e,t)=>t(e)),{name:t,value:r});return i!==t&&e(i,t),{name:i,value:n}}}let attributeTransformers=[];export function mapAttributes(e){attributeTransformers.push(e)}function outNonAlpineAttributes({name:e}){return alpineAttributeRegex().test(e)}let alpineAttributeRegex=()=>new RegExp(`^${prefixAsString}([^:^.]+)\\b`);function toParsedDirectives(e,t){return({name:r,value:i})=>{let n=r.match(alpineAttributeRegex()),a=r.match(/:([a-zA-Z0-9\-_:]+)/),l=r.match(/\.[^.\]]+(?=[^\]]*$)/g)||[],o=t||e[r]||r;return{type:n?n[1]:null,value:a?a[1]:null,modifiers:l.map((e=>e.replace(".",""))),expression:i,original:o}}}const DEFAULT="DEFAULT";let directiveOrder=["ignore","ref","data","id","anchor","bind","init","for","model","modelable","transition","show","if",DEFAULT,"teleport"];function byPriority(e,t){let r=-1===directiveOrder.indexOf(e.type)?DEFAULT:e.type,i=-1===directiveOrder.indexOf(t.type)?DEFAULT:t.type;return directiveOrder.indexOf(r)-directiveOrder.indexOf(i)}
//# sourceMappingURL=/sm/27af4e554f845d11a72d021bb9d331174a56fec12f10095d51316656bc601626.map