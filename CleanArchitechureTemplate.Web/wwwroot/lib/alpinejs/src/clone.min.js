/**
 * Minified by jsDelivr using Terser v5.37.0.
 * Original file: /npm/alpinejs@3.14.9/src/clone.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{effect,release,overrideEffect}from"./reactivity";import{initTree,isRoot}from"./lifecycle";import{walk}from"./utils/walk";export let isCloning=!1;export function skipDuringClone(e,t=()=>{}){return(...i)=>isCloning?t(...i):e(...i)}export function onlyDuringClone(e){return(...t)=>isCloning&&e(...t)}let interceptors=[];export function interceptClone(e){interceptors.push(e)}export function cloneNode(e,t){interceptors.forEach((i=>i(e,t))),isCloning=!0,dontRegisterReactiveSideEffects((()=>{initTree(t,((e,t)=>{t(e,(()=>{}))}))})),isCloning=!1}export let isCloningLegacy=!1;export function clone(e,t){t._x_dataStack||(t._x_dataStack=e._x_dataStack),isCloning=!0,isCloningLegacy=!0,dontRegisterReactiveSideEffects((()=>{cloneTree(t)})),isCloning=!1,isCloningLegacy=!1}export function cloneTree(e){let t=!1;initTree(e,((e,i)=>{walk(e,((e,n)=>{if(t&&isRoot(e))return n();t=!0,i(e,n)}))}))}function dontRegisterReactiveSideEffects(e){let t=effect;overrideEffect(((e,i)=>{let n=t(e);return release(n),()=>{}})),e(),overrideEffect(t)}
//# sourceMappingURL=/sm/d07b924165e52e6d05fd3a944860fb3fdce6d5890efc60759ce814ec53bcdb8f.map